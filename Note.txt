
Basic command:
 cd <dir_name> --> Change directory
 ls            --> List all the files in the directory
 ls -a         --> list all the Hidden files in the directory

-----------------------------------------------------------------------------------------------

Connecting Git repositories to the Code Editor
  git clone <repository url> 
-----------------------------------------------------------------------------------------------

Github repository modifications status

    git status                   // List all the files that has been modified but not committed

    Message that can appear while checking status of repository
    1).Untracked --> New files that git does't yet track
    2).Modified --> changed files
    3).Staged -->file is ready to be committed
    4).Unmounted -->unchanged files
-----------------------------------------------------------------------------------------------
Add and Commit :
    add     --> adds new or changed files in your working directory to the git staging area
           git add <file_name1> <file_name2>      :- Used to add files separated 
           git add .                              :- Used to add all the files once

    commit  --> it is the record of changes
            git commit -m "some message"  


------------------------------------------------------------------------------------------------

push --> upload local repo content to remot repo
        git push origin main
------------------------------------------------------------------------------------------------

git init  --> While you creat new directory in your working directory at that time first to add 
              .git file we initialize using this

              git init

 git remote add origin  <link>   --> to add remote  git

 git remote -v       --> to varify remote

 git branch          --> to check branch

 git branch -M main  --> to rename branch

 git push -u origin main  --> Now we push the repo ( To write every time origin main is hard for this we write "-u" and after this we only write git push )
 
 ---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Branch Related Changes:-

To create a new brach 
      git checkout -b <branch name>
This will switched to created new branch

  Now again if we want to go to the previous branch 
      git checkout <branch_name>

To delete a brach
  1)first you need to switched anyother branch before delete branch
  2)from any other branch you can delete the branch
  3)you can not delete the branch if you are on same brach that you want to delete

    git branch -d <branch_name>

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Merging Code:

To compare commits, branches, file & more
    git diff <branch_name>

To merge 2 brach      (we will not using this things)
    git merge<branch_name> 

instead of we are using pull request through github gui...

---------------------------------------
Pull command: 
    used to fetch and download content from a remote repo and immediately update the local repo to match that content...

      git pull origin main

------------------------------------------
Resolving merge conflicts

  (here we using commandline to merge a branch)
      git merge <branch_name>
  
  for example if we changed the main branch and Feature1 brach with 1 word difference
  than it will cause conflicts.

--------------------------------------------

git log            --> Command will give all the commits hash code and msg...

Undoing Changes:

Case1: Staged changes (add . but note commit)
      git reset <file_name>
      git reset

Case2: Commited chages(for one commit) (add . / Commit but not push)
      git reset HEAD~1

Case3: Commited changes (for many commits)
      git reset <commit hase>
      git reset --hard <commit hase>